[
  "tests/test_agents.py::test_move_forward",
  "tests/test_agents.py::test_add",
  "tests/test_agents.py::test_RandomAgentProgram",
  "tests/test_agents.py::test_RandomVacuumAgent",
  "tests/test_agents.py::test_TableDrivenAgent",
  "tests/test_agents.py::test_ReflexVacuumAgent",
  "tests/test_agents.py::test_SimpleReflexAgentProgram",
  "tests/test_agents.py::test_ModelBasedReflexAgentProgram",
  "tests/test_agents.py::test_ModelBasedVacuumAgent",
  "tests/test_agents.py::test_TableDrivenVacuumAgent",
  "tests/test_agents.py::test_compare_agents",
  "tests/test_agents.py::test_TableDrivenAgentProgram",
  "tests/test_agents.py::test_Agent",
  "tests/test_csp.py::test_csp_assign",
  "tests/test_csp.py::test_csp_unassign",
  "tests/test_csp.py::test_csp_nconflits",
  "tests/test_csp.py::test_csp_actions",
  "tests/test_csp.py::test_csp_result",
  "tests/test_csp.py::test_csp_goal_test",
  "tests/test_csp.py::test_csp_support_pruning",
  "tests/test_csp.py::test_csp_suppose",
  "tests/test_csp.py::test_csp_prune",
  "tests/test_csp.py::test_csp_choices",
  "tests/test_csp.py::test_csp_infer_assignement",
  "tests/test_csp.py::test_csp_restore",
  "tests/test_csp.py::test_csp_conflicted_vars",
  "tests/test_csp.py::test_revise",
  "tests/test_csp.py::test_AC3",
  "tests/test_csp.py::test_first_unassigned_variable",
  "tests/test_csp.py::test_num_legal_values",
  "tests/test_csp.py::test_mrv",
  "tests/test_csp.py::test_unordered_domain_values",
  "tests/test_csp.py::test_lcv",
  "tests/test_csp.py::test_forward_checking",
  "tests/test_csp.py::test_backtracking_search",
  "tests/test_csp.py::test_min_conflicts",
  "tests/test_csp.py::test_nqueens_csp",
  "tests/test_csp.py::test_universal_dict",
  "tests/test_csp.py::test_parse_neighbours",
  "tests/test_csp.py::test_topological_sort",
  "tests/test_csp.py::test_tree_csp_solver",
  "tests/test_games.py::test_minimax_decision",
  "tests/test_games.py::test_alphabeta_search",
  "tests/test_games.py::test_random_tests",
  "tests/test_knowledge.py::test_current_best_learning",
  "tests/test_knowledge.py::test_version_space_learning",
  "tests/test_knowledge.py::test_minimal_consistent_det",
  "tests/test_knowledge.py::test_tell",
  "tests/test_knowledge.py::test_extend_example",
  "tests/test_knowledge.py::test_new_literals",
  "tests/test_knowledge.py::test_new_clause",
  "tests/test_knowledge.py::test_choose_literal",
  "tests/test_knowledge.py::test_gain",
  "tests/test_knowledge.py::test_update_examples",
  "tests/test_knowledge.py::test_foil",
  "tests/test_learning.py::test_euclidean",
  "tests/test_learning.py::test_cross_entropy",
  "tests/test_learning.py::test_rms_error",
  "tests/test_learning.py::test_manhattan_distance",
  "tests/test_learning.py::test_mean_boolean_error",
  "tests/test_learning.py::test_mean_error",
  "tests/test_learning.py::test_exclude",
  "tests/test_learning.py::test_parse_csv",
  "tests/test_learning.py::test_weighted_mode",
  "tests/test_learning.py::test_weighted_replicate",
  "tests/test_learning.py::test_means_and_deviation",
  "tests/test_learning.py::test_plurality_learner",
  "tests/test_learning.py::test_naive_bayes",
  "tests/test_learning.py::test_k_nearest_neighbors",
  "tests/test_learning.py::test_truncated_svd",
  "tests/test_learning.py::test_decision_tree_learner",
  "tests/test_learning.py::test_information_content",
  "tests/test_learning.py::test_random_forest",
  "tests/test_learning.py::test_neural_network_learner",
  "tests/test_learning.py::test_perceptron",
  "tests/test_learning.py::test_random_weights",
  "tests/test_learning.py::test_adaboost",
  "tests/test_logic.py::test_is_symbol",
  "tests/test_logic.py::test_is_var_symbol",
  "tests/test_logic.py::test_is_prop_symbol",
  "tests/test_logic.py::test_variables",
  "tests/test_logic.py::test_expr",
  "tests/test_logic.py::test_extend",
  "tests/test_logic.py::test_subst",
  "tests/test_logic.py::test_PropKB",
  "tests/test_logic.py::test_wumpus_kb",
  "tests/test_logic.py::test_is_definite_clause",
  "tests/test_logic.py::test_parse_definite_clause",
  "tests/test_logic.py::test_pl_true",
  "tests/test_logic.py::test_tt_true",
  "tests/test_logic.py::test_dpll",
  "tests/test_logic.py::test_find_pure_symbol",
  "tests/test_logic.py::test_unit_clause_assign",
  "tests/test_logic.py::test_find_unit_clause",
  "tests/test_logic.py::test_unify",
  "tests/test_logic.py::test_pl_fc_entails",
  "tests/test_logic.py::test_tt_entails",
  "tests/test_logic.py::test_prop_symbols",
  "tests/test_logic.py::test_constant_symbols",
  "tests/test_logic.py::test_predicate_symbols",
  "tests/test_logic.py::test_eliminate_implications",
  "tests/test_logic.py::test_dissociate",
  "tests/test_logic.py::test_associate",
  "tests/test_logic.py::test_move_not_inwards",
  "tests/test_logic.py::test_distribute_and_over_or",
  "tests/test_logic.py::test_to_cnf",
  "tests/test_logic.py::test_pl_resolution",
  "tests/test_logic.py::test_standardize_variables",
  "tests/test_logic.py::test_fol_bc_ask",
  "tests/test_logic.py::test_fol_fc_ask",
  "tests/test_logic.py::test_d",
  "tests/test_logic.py::test_WalkSAT",
  "tests/test_logic.py::test_SAT_plan",
  "tests/test_mdp.py::test_value_iteration",
  "tests/test_mdp.py::test_policy_iteration",
  "tests/test_mdp.py::test_best_policy",
  "tests/test_mdp.py::test_transition_model",
  "tests/test_mdp.py::test_pomdp_value_iteration",
  "tests/test_mdp.py::test_pomdp_value_iteration2",
  "tests/test_nlp.py::test_rules",
  "tests/test_nlp.py::test_lexicon",
  "tests/test_nlp.py::test_grammar",
  "tests/test_nlp.py::test_generation",
  "tests/test_nlp.py::test_prob_rules",
  "tests/test_nlp.py::test_prob_lexicon",
  "tests/test_nlp.py::test_prob_grammar",
  "tests/test_nlp.py::test_prob_generation",
  "tests/test_nlp.py::test_chart_parsing",
  "tests/test_nlp.py::test_CYK_parse",
  "tests/test_nlp.py::test_stripRawHTML",
  "tests/test_nlp.py::test_determineInlinks",
  "tests/test_nlp.py::test_findOutlinks_wiki",
  "tests/test_nlp.py::test_expand_pages",
  "tests/test_nlp.py::test_relevant_pages",
  "tests/test_nlp.py::test_normalize",
  "tests/test_nlp.py::test_detectConvergence",
  "tests/test_nlp.py::test_getInlinks",
  "tests/test_nlp.py::test_getOutlinks",
  "tests/test_nlp.py::test_HITS",
  "tests/test_planning.py::test_action",
  "tests/test_planning.py::test_air_cargo_1",
  "tests/test_planning.py::test_air_cargo_2",
  "tests/test_planning.py::test_spare_tire",
  "tests/test_planning.py::test_spare_tire_2",
  "tests/test_planning.py::test_three_block_tower",
  "tests/test_planning.py::test_have_cake_and_eat_cake_too",
  "tests/test_planning.py::test_shopping_problem",
  "tests/test_planning.py::test_graph_call",
  "tests/test_planning.py::test_graphplan",
  "tests/test_planning.py::test_linearize_class",
  "tests/test_planning.py::test_expand_actions",
  "tests/test_planning.py::test_find_open_precondition",
  "tests/test_planning.py::test_cyclic",
  "tests/test_planning.py::test_partial_order_planner",
  "tests/test_planning.py::test_double_tennis",
  "tests/test_planning.py::test_job_shop_problem",
  "tests/test_planning.py::test_refinements",
  "tests/test_planning.py::test_hierarchical_search",
  "tests/test_planning.py::test_convert_angelic_HLA",
  "tests/test_planning.py::test_is_primitive",
  "tests/test_planning.py::test_angelic_action",
  "tests/test_planning.py::test_optimistic_reachable_set",
  "tests/test_planning.py::test_pesssimistic_reachable_set",
  "tests/test_planning.py::test_find_reachable_set",
  "tests/test_planning.py::test_intersects_goal",
  "tests/test_planning.py::test_making_progress",
  "tests/test_planning.py::test_angelic_search",
  "tests/test_probability.py::tests",
  "tests/test_probability.py::test_probdist_basic",
  "tests/test_probability.py::test_probdist_frequency",
  "tests/test_probability.py::test_probdist_normalize",
  "tests/test_probability.py::test_jointprob",
  "tests/test_probability.py::test_event_values",
  "tests/test_probability.py::test_enumerate_joint",
  "tests/test_probability.py::test_enumerate_joint_ask",
  "tests/test_probability.py::test_bayesnode_p",
  "tests/test_probability.py::test_bayesnode_sample",
  "tests/test_probability.py::test_enumeration_ask",
  "tests/test_probability.py::test_elemination_ask",
  "tests/test_probability.py::test_prior_sample",
  "tests/test_probability.py::test_prior_sample2",
  "tests/test_probability.py::test_rejection_sampling",
  "tests/test_probability.py::test_rejection_sampling2",
  "tests/test_probability.py::test_likelihood_weighting",
  "tests/test_probability.py::test_likelihood_weighting2",
  "tests/test_probability.py::test_forward_backward",
  "tests/test_probability.py::test_fixed_lag_smoothing",
  "tests/test_probability.py::test_particle_filtering",
  "tests/test_probability.py::test_monte_carlo_localization",
  "tests/test_probability.py::test_gibbs_ask",
  "tests/test_rl.py::test_PassiveDUEAgent",
  "tests/test_rl.py::test_PassiveADPAgent",
  "tests/test_rl.py::test_PassiveTDAgent",
  "tests/test_rl.py::test_QLearning",
  "tests/test_search.py::test_find_min_edge",
  "tests/test_search.py::test_breadth_first_tree_search",
  "tests/test_search.py::test_breadth_first_graph_search",
  "tests/test_search.py::test_best_first_graph_search",
  "tests/test_search.py::test_uniform_cost_search",
  "tests/test_search.py::test_depth_first_tree_search",
  "tests/test_search.py::test_depth_first_graph_search",
  "tests/test_search.py::test_iterative_deepening_search",
  "tests/test_search.py::test_depth_limited_search",
  "tests/test_search.py::test_bidirectional_search",
  "tests/test_search.py::test_astar_search",
  "tests/test_search.py::test_find_blank_square",
  "tests/test_search.py::test_actions",
  "tests/test_search.py::test_result",
  "tests/test_search.py::test_goal_test",
  "tests/test_search.py::test_check_solvability",
  "tests/test_search.py::test_conflict",
  "tests/test_search.py::test_recursive_best_first_search",
  "tests/test_search.py::test_hill_climbing",
  "tests/test_search.py::test_simulated_annealing",
  "tests/test_search.py::test_BoggleFinder",
  "tests/test_search.py::test_and_or_graph_search",
  "tests/test_search.py::test_online_dfs_agent",
  "tests/test_search.py::test_LRTAStarAgent",
  "tests/test_search.py::test_genetic_algorithm",
  "tests/test_search.py::test_simpleProblemSolvingAgent",
  "tests/test_text.py::test_text_models",
  "tests/test_text.py::test_char_models",
  "tests/test_text.py::test_samples",
  "tests/test_text.py::test_viterbi_segmentation",
  "tests/test_text.py::test_shift_encoding",
  "tests/test_text.py::test_shift_decoding",
  "tests/test_text.py::test_permutation_decoder",
  "tests/test_text.py::test_rot13_encoding",
  "tests/test_text.py::test_rot13_decoding",
  "tests/test_text.py::test_counting_probability_distribution",
  "tests/test_text.py::test_ir_system",
  "tests/test_text.py::test_words",
  "tests/test_text.py::test_canonicalize",
  "tests/test_text.py::test_translate",
  "tests/test_text.py::test_bigrams",
  "tests/test_utils.py::test_removeall_list",
  "tests/test_utils.py::test_removeall_string",
  "tests/test_utils.py::test_unique",
  "tests/test_utils.py::test_count",
  "tests/test_utils.py::test_product",
  "tests/test_utils.py::test_first",
  "tests/test_utils.py::test_is_in",
  "tests/test_utils.py::test_mode",
  "tests/test_utils.py::test_powerset",
  "tests/test_utils.py::test_argminmax",
  "tests/test_utils.py::test_histogram",
  "tests/test_utils.py::test_dotproduct",
  "tests/test_utils.py::test_element_wise_product",
  "tests/test_utils.py::test_matrix_multiplication",
  "tests/test_utils.py::test_vector_to_diagonal",
  "tests/test_utils.py::test_vector_add",
  "tests/test_utils.py::test_scalar_vector_product",
  "tests/test_utils.py::test_scalar_matrix_product",
  "tests/test_utils.py::test_inverse_matrix",
  "tests/test_utils.py::test_rounder",
  "tests/test_utils.py::test_num_or_str",
  "tests/test_utils.py::test_normalize",
  "tests/test_utils.py::test_norm",
  "tests/test_utils.py::test_clip",
  "tests/test_utils.py::test_sigmoid",
  "tests/test_utils.py::test_gaussian",
  "tests/test_utils.py::test_sigmoid_derivative",
  "tests/test_utils.py::test_weighted_choice",
  "tests/test_utils.py::test_distance",
  "tests/test_utils.py::test_distance_squared",
  "tests/test_utils.py::test_vector_clip",
  "tests/test_utils.py::test_turn_heading",
  "tests/test_utils.py::test_turn_left",
  "tests/test_utils.py::test_turn_right",
  "tests/test_utils.py::test_step",
  "tests/test_utils.py::test_Expr",
  "tests/test_utils.py::test_expr"
]